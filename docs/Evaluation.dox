 /**
    @page DAEVAL Evaluation

    To evaluate the polynomial represented by a DA object, the %DACE core provides the daceEvalTree()
    function. This function converts an array of DA objects into a specific structure that allows efficient
    evaluation of the polynomials. The structure is a tree structure where the branches represent
    multiplications by one of the independent variables and the nodes are individual monomials and their
    associated coefficients.

    @subsection DAEVALCORE Evaluation in %DACE Core
    Typical use may look like this:
    @code
    const unsigned int count = 3;
    DACEDA *das[] = { &x, &y, &z };      // all of these need to be allocated elsewhere

    // compile the DAs
    unsigned int nterm, nord;
    daceEvalTree(das, count, NULL, &nterm, &nord);
    double *ac = calloc(nterm*(count+2), sizeof(double));
    daceEvalTree(das, count, ac, &nterm, &nord);

    // evaluate with doubles
    const unsigned int acount = 4;
    double darg[] = { 0.1, 0.2, 0.3, 0.4 };
    double dres[count];
    daceEvalTreeDouble(dres, count, darg, acount, ac, nterm, nord);

    // evaluate with DAs
    DACEDA *arg[] = { &ax, &ay, &az, &aw };
    DACEDA *res[] = { &rx, &ry, &rz };
    daceEvalTreeDA(res, count, arg, acount, ac, nterm, nord);

    free(ac);
    @endcode

    @subsection DAEVALCPP Evaluation in C++ Interface
    C++ interface: see DACE::compiledDA

    @subsection DAEVALALG Algorithm
    Instead of relying on daceEvalTreeDA and daceEvalTreeDouble in the %DACE Core, language interfaces
    can implement the actual evaluation in any language using this relatively simple algorithm.
    The values of the independent variables are passed in the array `args`.
    @code
        daceEvalTree([...], count, ac, nterm, nvar, nord)

        function eval(args[nvar]):
            res[count], xm[nord+1]
            xm[1] = 1.0
            ic = 3
            loop i = 1 ... count:
                res[i] = ac[ic]
                ic = ic + 1
            loop i = 2 ... nterm:
                jl = int(ac[ic])
                ic = ic + 1
                jv = int(ac[ic])
                ic = ic + 1
                xm[jl+1] = xm[jl]*args[jv]
                loop j = 1 ... count:
                    res[j] = res[j] + xm[jl+1]*ac[ic]
                    ic = ic + 1
            return(res)
    @endcode

    @note The arrays in this pseudo-code are 1-based and loop bounds are inclusive.

    @note The types of args, res, and xm can be any algebraic type, but must match. It must support
    the following operations:
      - addition
      - double multiplication

    In addition to daceEvalTreeDouble() in core/daceval.c see also DACE::compiledDA::operator()() in
    interfaces/cxx/compiledDA.cpp for implementations of this algorithm in C++.

    @subsection DAEVALVAL Validation Example
    The following is an example of a vector of 3 DAs, the resulting outputs from daceEvalTree(), and
    the result of an actual evaluation at the point (0.1, 0.1, 0.1).
    This can be used for validation of custom implementations of the evaluation algorithm.

    @subsubsection DAEVALVALIN Input DA objects
    @verbatim
       I  COEFFICIENT              ORDER EXPONENTS
       1    1.0731617046209674e+01   0   0  0  0
       2    2.0698399444569627e-03   1   0  0  1
       3   -8.2707617206795002e-03   1   1  0  0
       4   -8.9640684539475865e-03   1   0  1  0
       5   -1.5396826689397427e-06   2   0  0  2
       6    3.9645659922898229e-06   2   1  0  1
       7    2.3768760074604492e-06   2   0  1  1
       8    2.1706603156882850e-06   2   2  0  0
       9    2.9414390331984051e-06   2   1  1  0
       10    5.9826664866048981e-07   2   0  2  0
       11   -2.5704244321796382e-10   3   0  0  3
       12    4.5518171787177532e-10   3   1  0  2
       13    1.3804202670453525e-09   3   0  1  2
       14   -3.4304545995781256e-09   3   2  0  1
       15   -6.7170198178351840e-09   3   1  1  1
       16   -3.1164934043913742e-09   3   0  2  1
       17    3.6880001365506809e-10   3   3  0  0
       18    2.6482621497114037e-09   3   2  1  0
       19    3.2548840638783477e-09   3   1  2  0
       20    1.1434657871030595e-09   3   0  3  0
       21    2.9473433308941508e-14   4   0  0  4
       22   -3.9660222480081307e-13   4   1  0  3
       23    6.3673427616796082e-14   4   0  1  3
       24    7.3082929130674265e-13   4   2  0  2
       25   -2.4584716452035157e-13   4   1  1  2
       26   -9.3745770162403323e-13   4   0  2  2
       27    1.7014975965279934e-12   4   3  0  1
       28    5.6047551787684908e-12   4   2  1  1
       29    6.6950765076514568e-12   4   1  2  1
       30    2.4435941129029343e-12   4   0  3  1
       31   -1.3273156900335892e-12   4   4  0  0
       32   -6.2257270199960269e-12   4   3  1  0
       33   -9.9791769752129939e-12   4   2  2  0
       34   -6.6375395918707506e-12   4   1  3  0
       35   -1.5559549563931863e-12   4   0  4  0
       36    2.2788110510085511e-17   5   0  0  5
       37   -1.4872599037098399e-16   5   1  0  4
       38   -1.2965682701461665e-16   5   0  1  4
       39    5.4083929382276330e-16   5   2  0  3
       40    1.1065915146943726e-15   5   1  1  3
       41    2.7246952728588654e-16   5   0  2  3
       42   -1.4192001068458032e-15   5   3  0  2
       43   -3.1928227709203601e-15   5   2  1  2
       44   -1.3988855402169393e-15   5   1  2  2
       45    1.7813602162372261e-16   5   0  3  2
       46   -1.8289646003156609e-17   5   4  0  1
       47   -9.6549025098241679e-16   5   3  1  1
       48   -3.7412192946182929e-15   5   2  2  1
       49   -4.1771039887592307e-15   5   1  3  1
       50   -1.3590935282632619e-15   5   0  4  1
       51    1.3043121167213739e-15   5   5  0  0
       52    6.7007268949978923e-15   5   4  1  0
       53    1.3509162364477382e-14   5   3  2  0
       54    1.3410992271175509e-14   5   2  3  0
       55    6.4605368251153855e-15   5   1  4  0
       56    1.1942682818511941e-15   5   0  5  0
    ------------------------------------------------

       I  COEFFICIENT              ORDER EXPONENTS
       1   -9.2055840418479376e-02   0   0  0  0
       2    9.1651819435408788e-03   1   0  0  1
       3   -8.6166060172128949e-03   1   1  0  0
       4   -1.2320952576911638e-02   1   0  1  0
       5   -7.5495911648320308e-07   2   0  0  2
       6   -9.5651036027266177e-07   2   1  0  1
       7   -4.3687321211204135e-06   2   0  1  1
       8    8.9598670169762751e-06   2   2  0  0
       9    1.8918707636778131e-05   2   1  1  0
       10    8.2530688717886691e-06   2   0  2  0
       11   -8.6147250377003652e-10   3   0  0  3
       12    2.7090302826062187e-09   3   1  0  2
       13    2.1139812839398175e-09   3   0  1  2
       14   -3.7234971699432507e-09   3   2  0  1
       15   -3.7299900861196747e-09   3   1  1  1
       16    6.0755380136989589e-11   3   0  2  1
       17   -6.6393805752671513e-09   3   3  0  0
       18   -1.8554283442680815e-08   3   2  1  0
       19   -1.7624953462359759e-08   3   1  2  0
       20   -5.2305901006297779e-09   3   0  3  0
       21   -1.8530393102927008e-13   4   0  0  4
       22    5.7959230091798355e-13   4   1  0  3
       23    1.4744036065154932e-12   4   0  1  3
       24   -3.1427640126118896e-12   4   2  0  2
       25   -8.0510112109833069e-12   4   1  1  2
       26   -4.1469042961396827e-12   4   0  2  2
       27    6.6868280060737741e-12   4   3  0  1
       28    1.7241672136843257e-11   4   2  1  1
       29    1.4027457875471756e-11   4   1  2  1
       30    3.5738980774804740e-12   4   0  3  1
       31    3.0942293824937946e-12   4   4  0  0
       32    9.6556076126984112e-12   4   3  1  0
       33    1.1812726168939689e-11   4   2  2  0
       34    6.6147239678852881e-12   4   1  3  0
       35    1.3409041187401744e-12   4   0  4  0
       36    3.4696711932037998e-17   5   0  0  5
       37   -3.9710226799696637e-16   5   1  0  4
       38    6.9474987579771944e-17   5   0  1  4
       39    9.1491415151002645e-16   5   2  0  3
       40   -2.6815255743838578e-16   5   1  1  3
       41   -1.3162139680155056e-15   5   0  2  3
       42    6.9928804198708878e-16   5   3  0  2
       43    6.3779939063738180e-15   5   2  1  2
       44    1.0491053494513074e-14   5   1  2  2
       45    4.4049656748474038e-15   5   0  3  2
       46   -6.5202587602936024e-15   5   4  0  1
       47   -2.4513914148909001e-14   5   3  1  1
       48   -3.5245603668972208e-14   5   2  2  1
       49   -2.2261389651872786e-14   5   1  3  1
       50   -5.1448907482051550e-15   5   0  4  1
       51   -4.6243027207753368e-16   5   5  0  0
       52    5.5752509040210144e-16   5   4  1  0
       53    5.0465833184864010e-15   5   3  2  0
       54    7.5685158583461659e-15   5   2  3  0
       55    4.5196954063580238e-15   5   1  4  0
       56    9.8207282936166804e-16   5   0  5  0
    ------------------------------------------------

       I  COEFFICIENT              ORDER EXPONENTS
       1    3.9215204662787684e+01   0   0  0  0
       2   -2.4495456838230728e-03   1   0  0  1
       3   -8.7016077017375397e-03   1   1  0  0
       4   -7.0422678744419178e-03   1   0  1  0
       5   -2.5349228606239634e-06   2   0  0  2
       6    5.7476669457392614e-06   2   1  0  1
       7    5.7558311037989501e-06   2   0  1  1
       8   -3.1157223776147864e-08   2   2  0  0
       9   -2.1704882122337436e-06   2   1  1  0
       10   -1.4359664616722230e-06   2   0  2  0
       11   -3.7887510124022816e-10   3   0  0  3
       12    1.3427117064227391e-09   3   1  0  2
       13    3.6210240695186509e-09   3   0  1  2
       14   -6.4277248475241770e-09   3   2  0  1
       15   -1.5370198369220274e-08   3   1  1  1
       16   -8.4712798196528188e-09   3   0  2  1
       17    3.5812303155286270e-09   3   3  0  0
       18    1.3693945971918566e-08   3   2  1  0
       19    1.5828421216789377e-08   3   1  2  0
       20    5.5611172651323704e-09   3   0  3  0
       21    2.3544535818719481e-13   4   0  0  4
       22   -1.4325859841898172e-12   4   1  0  3
       23   -4.8069423952710451e-13   4   0  1  3
       24    2.4680091880127426e-12   4   2  0  2
       25    1.5185338049321439e-12   4   1  1  2
       26   -1.3980226233220417e-12   4   0  2  2
       27    2.7289337089782001e-12   4   3  0  1
       28    1.1014363544953865e-11   4   2  1  1
       29    1.5232510393576649e-11   4   1  2  1
       30    6.1545158626657495e-12   4   0  3  1
       31   -4.6495678411627763e-12   4   4  0  0
       32   -2.0224607205970340e-11   4   3  1  0
       33   -3.1775724186190251e-11   4   2  2  0
       34   -2.1204795595774598e-11   4   1  3  0
       35   -5.0000283578525264e-12   4   0  4  0
       36    8.0080909047126896e-17   5   0  0  5
       37   -3.5964635297875204e-16   5   1  0  4
       38   -5.7797892377237759e-16   5   0  1  4
       39    1.5994903022113475e-15   5   2  0  3
       40    4.0360162392180254e-15   5   1  1  3
       41    1.6545200275931433e-15   5   0  2  3
       42   -4.3144055030867108e-15   5   3  0  2
       43   -1.1502640665463764e-14   5   2  1  2
       44   -7.9502125494230869e-15   5   1  2  2
       45   -1.0986127238793614e-15   5   0  3  2
       46    1.3022657268522199e-15   5   4  0  1
       47    2.3995650550506012e-15   5   3  1  1
       48   -2.8491426114287158e-15   5   2  2  1
       49   -6.8770388986479149e-15   5   1  3  1
       50   -2.7415968994149614e-15   5   0  4  1
       51    4.0863414058507326e-15   5   5  0  0
       52    2.0310577261903349e-14   5   4  1  0
       53    4.0173874527222644e-14   5   3  2  0
       54    3.9410060742462929e-14   5   2  3  0
       55    1.8869982627940916e-14   5   1  4  0
       56    3.4731361580110909e-15   5   0  5  0
    ------------------------------------------------
    @endverbatim

    @subsubsection DAEVALVALOUT Output from daceEvalTree()
    @verbatim
    count = 3
    nord = 5
    nvar = 3
    nterm = 56
    ac = [0, 0, 10.731617046209674, -0.092055840418479376, 39.215204662787684,
          1, 1, -0.0082707617206795002, -0.0086166060172128949, -0.0087016077017375397,
          2, 1, 2.170660315688285e-06, 8.9598670169762751e-06, -3.1157223776147864e-08,
          3, 1, 3.6880001365506809e-10, -6.6393805752671513e-09, 3.581230315528627e-09,
          4, 1, -1.3273156900335892e-12, 3.0942293824937946e-12, -4.6495678411627763e-12,
          5, 1, 1.3043121167213739e-15, -4.6243027207753368e-16, 4.0863414058507326e-15,
          5, 2, 6.7007268949978923e-15, 5.5752509040210144e-16, 2.0310577261903349e-14,
          5, 3, -1.8289646003156609e-17, -6.5202587602936024e-15, 1.3022657268522199e-15,
          4, 2, -6.2257270199960269e-12, 9.6556076126984112e-12, -2.022460720597034e-11,
          5, 2, 1.3509162364477382e-14, 5.046583318486401e-15, 4.0173874527222644e-14,
          5, 3, -9.6549025098241679e-16, -2.4513914148909001e-14, 2.3995650550506012e-15,
          4, 3, 1.7014975965279934e-12, 6.6868280060737741e-12, 2.7289337089782001e-12,
          5, 3, -1.4192001068458032e-15, 6.9928804198708878e-16, -4.3144055030867108e-15,
          3, 2, 2.6482621497114037e-09, -1.8554283442680815e-08, 1.3693945971918566e-08,
          4, 2, -9.9791769752129939e-12, 1.1812726168939689e-11, -3.1775724186190251e-11,
          5, 2, 1.3410992271175509e-14, 7.5685158583461659e-15, 3.9410060742462929e-14,
          5, 3, -3.7412192946182929e-15, -3.5245603668972208e-14, -2.8491426114287158e-15,
          4, 3, 5.6047551787684908e-12, 1.7241672136843257e-11, 1.1014363544953865e-11,
          5, 3, -3.1928227709203601e-15, 6.377993906373818e-15, -1.1502640665463764e-14,
          3, 3, -3.4304545995781256e-09, -3.7234971699432507e-09, -6.427724847524177e-09,
          4, 3, 7.3082929130674265e-13, -3.1427640126118896e-12, 2.4680091880127426e-12,
          5, 3, 5.408392938227633e-16, 9.1491415151002645e-16, 1.5994903022113475e-15,
          2, 2, 2.9414390331984051e-06, 1.8918707636778131e-05, -2.1704882122337436e-06,
          3, 2, 3.2548840638783477e-09, -1.7624953462359759e-08, 1.5828421216789377e-08,
          4, 2, -6.6375395918707506e-12, 6.6147239678852881e-12, -2.1204795595774598e-11,
          5, 2, 6.4605368251153855e-15, 4.5196954063580238e-15, 1.8869982627940916e-14,
          5, 3, -4.1771039887592307e-15, -2.2261389651872786e-14, -6.8770388986479149e-15,
          4, 3, 6.6950765076514568e-12, 1.4027457875471756e-11, 1.5232510393576649e-11,
          5, 3, -1.3988855402169393e-15, 1.0491053494513074e-14, -7.9502125494230869e-15,
          3, 3, -6.717019817835184e-09, -3.7299900861196747e-09, -1.5370198369220274e-08,
          4, 3, -2.4584716452035157e-13, -8.0510112109833069e-12, 1.5185338049321439e-12,
          5, 3, 1.1065915146943726e-15, -2.6815255743838578e-16, 4.0360162392180254e-15,
          2, 3, 3.9645659922898229e-06, -9.5651036027266177e-07, 5.7476669457392614e-06,
          3, 3, 4.5518171787177532e-10, 2.7090302826062187e-09, 1.3427117064227391e-09,
          4, 3, -3.9660222480081307e-13, 5.7959230091798355e-13, -1.4325859841898172e-12,
          5, 3, -1.4872599037098399e-16, -3.9710226799696637e-16, -3.5964635297875204e-16,
          1, 2, -0.0089640684539475865, -0.012320952576911638, -0.0070422678744419178,
          2, 2, 5.9826664866048981e-07, 8.2530688717886691e-06, -1.435966461672223e-06,
          3, 2, 1.1434657871030595e-09, -5.2305901006297779e-09, 5.5611172651323704e-09,
          4, 2, -1.5559549563931863e-12, 1.3409041187401744e-12, -5.0000283578525264e-12,
          5, 2, 1.1942682818511941e-15, 9.8207282936166804e-16, 3.4731361580110909e-15,
          5, 3, -1.3590935282632619e-15, -5.144890748205155e-15, -2.7415968994149614e-15,
          4, 3, 2.4435941129029343e-12, 3.573898077480474e-12, 6.1545158626657495e-12,
          5, 3, 1.7813602162372261e-16, 4.4049656748474038e-15, -1.0986127238793614e-15,
          3, 3, -3.1164934043913742e-09, 6.0755380136989589e-11, -8.4712798196528188e-09,
          4, 3, -9.3745770162403323e-13, -4.1469042961396827e-12, -1.3980226233220417e-12,
          5, 3, 2.7246952728588654e-16, -1.3162139680155056e-15, 1.6545200275931433e-15,
          2, 3, 2.3768760074604492e-06, -4.3687321211204135e-06, 5.7558311037989501e-06,
          3, 3, 1.3804202670453525e-09, 2.1139812839398175e-09, 3.6210240695186509e-09,
          4, 3, 6.3673427616796082e-14, 1.4744036065154932e-12, -4.8069423952710451e-13,
          5, 3, -1.2965682701461665e-16, 6.9474987579771944e-17, -5.7797892377237759e-16,
          1, 3, 0.0020698399444569627, 0.0091651819435408788, -0.0024495456838230728,
          2, 3, -1.5396826689397427e-06, -7.5495911648320308e-07, -2.5349228606239634e-06,
          3, 3, -2.5704244321796382e-10, -8.6147250377003652e-10, -3.7887510124022816e-10,
          4, 3, 2.9473433308941508e-14, -1.8530393102927008e-13, 2.3544535818719481e-13,
          5, 3, 2.2788110510085511e-17, 3.4696711932037998e-17, 8.0080909047126896e-17]
    @endverbatim

    @subsubsection DAEVALVALRES Evaluation Result
    Evaluation at (0.1, 0.1, 0.1) should yield (10.730100652303637, -0.093232777620592802, 39.213385373984302).
 */
